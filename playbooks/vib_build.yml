---
- name: Build cloud-init package
  hosts: localhost
  become: true
  gather_facts: false
  become_method: sudo
  serial: 1
  vars_files:
    - vars/all.yml
  tasks:
    - name: Clone Repo
      git:
        repo: "{{ repo }}"
        dest: "{{ repo_dir }}"

    - name: Create payload folder
      file:
        path: "{{payload_dir}}"
        state: directory

    - name: Create dist folder
      file:
        path: "{{dist_dir}}"
        state: directory

    - name: Run script to build cloud-init
      script: "/scripts/build-cloud-init.sh"
      args:
        chdir: "{{repo_dir}}"
      environment:
        PAYLOAD: "{{ payload }}"
        PAYLOAD_DIR: "{{ payload_dir }}opt/"
        REPO_DIR: "{{ repo_dir }}"
        PAYLOAD_ROOT: "{{ payload_root }}"
        CLOUDINIT_REPO: "{{ repo }}"
        PYTHON_VER: "{{ python_ver }}"

    - name: Creating config location
      file:
        path: "{{ payload_dir }}opt/etc/cloud/"
        state: directory

    - name: Creating cloud.cfg
      template:
        src: templates/cloud.cfg.j2
        dest: "{{ payload_dir }}opt/etc/cloud/cloud.cfg"
        owner: root
        group: root
        mode: '0444'

    - name: Creating alterantive file paths
      file:
        path: "{{ payload_dir }}opt/var/lib/cloud/seed/nocloud/"
        state: directory

    - name: Copying NoCloud Data files
      template:
        src: "templates/{{ item }}.j2"
        dest: "{{ payload_dir }}opt/var/lib/cloud/seed/nocloud/{{ item }}"
      with_items:
        - user-data
        - meta-data

- name: Build vib package
  hosts: localhost
  become: true
  gather_facts: true
  become_method: sudo
  serial: 1
  vars_files:
    - vars/all.yml
  tasks:
    - name: Creating file list
      find:
        paths: "{{ payload_dir }}"
        recurse: yes
      register: filelist

    - name: Creating tar file
      archive:
        path: "{{ payload_dir }}"
        dest: "{{ payload_dir }}oem.tar"
        format: tar

    - name: Generating sha1 checksum of new tarfile
      stat:
        path: "{{ payload_dir }}oem.tar"
        get_checksum: yes
        checksum_algorithm: sha1
      register: vib_sha1

    - name: Compressing tarfile
      archive:
        path: "{{ payload_dir }}oem.tar"
        dest: "{{ payload_dir }}{{ payload }}"
        format: gz

    - name: Generating sha256 checksum of new gzip file
      stat:
        path: "{{ payload_dir }}{{ payload }}"
        get_checksum: yes
        checksum_algorithm: sha256
      register: vib_sha256

    - name: Build descriptor.xml
      template:
        src: templates/descriptor.xml.j2
        dest: "{{ payload }}descriptor.xml"

    - name: Create empty sig file
      file:
        path: "{{ payload_dir }}sig.pkcs7"
        state: touch

    - name: Build VIB archive
      shell:
        cmd: "ar qDv {{ dist_dir }}{{ payload }}_$(date +%Y-%m-%d_%H%M).vib {{ payload_dir }}descriptor.xml {{ payload_dir }}sig.pkcs7 {{ payload_dir }}{{ payload }}"