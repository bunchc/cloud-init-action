---
name: Build ESXi Image with Cloud-Init
on: [push]

# Set rax api stuff globally
env:
  RACKSPACE_API_TOKEN: ${{ secrets.RACKSPACE_API_TOKEN }}
  RACKSPACE_USERNAME: ${{ secrets.RACKSPACE_USERNAME }}
  RACKSPACE_REGION: ${{ secrets.RACKSPACE_REGION }}
  RACKSPACE_SSH_PUB_KEY: ${{ secrets.RACKSPACE_SSH_PUB_KEY }}
  RACKSPACE_TENANT_ID: ${{ secrets.RACKSPACE_TENANT_ID }}
  RACKSPACE_FLAVOR: ${{ secrets.RACKSPACE_FLAVOR }}
  RACKSPACE_IMAGE: ${{ secrets.RACKSPACE_IMAGE }}


jobs:
  # Build cloud-init and package into a vib
  build_vib:
    runs-on: ubuntu-latest
    container:
      image: 'docker://bunchc/cloud-init-action'
    name: Build cloud-init
    steps:
      - name: Build cloud-init
        id: build-step
        uses: bunchc/cloud-init-action@v2
      - name: Upload VIB
        uses: actions/upload-artifact@v2
        with:
          name: cloud-init-vib
          path: ${{ github.workspace }}/*.vib


  # Build an OnMetal server
  build_packer_server:
    name: Build Packer Build Server
    runs-on: ubuntu-latest
    container:
      image: 'docker://bunchc/ironic-factory'
    steps:
      - name: Create OnMetal Server
        uses: 'bunchc/ironic_factory@v3'
        with:
          playbook: "/ansible/create.yml"
      - name: Store ansible inventory
        uses: actions/upload-artifact@v2
        with:
          name: inventory
          path: ${{ github.workspace }}/inventory


  # Use ansible to install and configure libvirt, kvm, and packer
  provision_packer_server:
    name: Provision Packer Build Server
    needs: build_packer_server
    runs-on: ubuntu-latest
    container:
      image: 'docker://bunchc/ironic-factory'
    steps:
      - name: Download inventory files
        uses: actions/download-artifact@v2
        with: 
          name: inventory
#      - name: Display structure of downloaded inventory
#        run: ls -R
#        working-directory: ${{ github.workspace }}/
#      - name: Display GITHUB_WORKSPACE
#        uses: docker://alpine:3.8
#        with:
#          entrypoint: /bin/ls
#          args: "-R /github/workspace"
      - name: Run Ansible provisioning
        uses: 'bunchc/ironic_factory@v3'
        with:
          inventory: "${GITHUB_WORKSPACE}/inventory"
          playbook: "/ansible/provision.yml"
          verbosity: "-vvv"


  # Use ansible to run packer builds
  run_packer_builds:
    name: Run Packer Builds
    needs: provision_packer_server
    runs-on: ubuntu-latest
    container:
      image: 'docker://bunchc/ironic-factory'
    steps:
      - name: Download inventory files
        uses: actions/download-artifact@v2
        with: 
          name: inventory
      - name: Run Ansible provisioning
        uses: 'bunchc/ironic_factory@v3'
        with:
          inventory: "${GITHUB_WORKSPACE}/inventory"
          playbook: "/ansible/run-packer.yml"
          verbosity: "-vvv"


  # Destroy the server
  destroy_device:
    name: Destroy OnMetal Device
    needs: provision_packer_server
    #needs: build_packer_server
    runs-on: ubuntu-latest
    container:
      image: 'docker://bunchc/ironic-factory'
    if: ${{ always() }}
    steps:
      - name: Download inventory files
        uses: actions/download-artifact@v2
        with: 
          name: inventory
      - name: Destroy the OnMetal Device
        uses: 'bunchc/ironic_factory@v2'
        with:
          playbook: /ansible/run-packer.yml